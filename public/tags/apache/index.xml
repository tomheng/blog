<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Apache on 趣味互联网</title>
    <link>http://:1313/tmp/tags/apache/</link>
    <description>Recent content in Apache on 趣味互联网</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 28 May 2010 15:01:32 +0000</lastBuildDate>
    <atom:link href="http://:1313/tmp/tags/apache/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Apache mod_rewrite规则重写的标志一览</title>
      <link>http://:1313/tmp/2010/05/apache-mod_rewrite%E8%A7%84%E5%88%99%E9%87%8D%E5%86%99%E7%9A%84%E6%A0%87%E5%BF%97%E4%B8%80%E8%A7%88/</link>
      <pubDate>Fri, 28 May 2010 15:01:32 +0000</pubDate>
      
      <guid>http://:1313/tmp/2010/05/apache-mod_rewrite%E8%A7%84%E5%88%99%E9%87%8D%E5%86%99%E7%9A%84%E6%A0%87%E5%BF%97%E4%B8%80%E8%A7%88/</guid>
      <description>&lt;p&gt;Apache mod_rewrite确实很强大，不过也是需要下些功夫才能学好的东西，通过它可以实现很多有趣的功能。下面是Apache mod_rewrite的学习笔记。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;一、Apache mod_rewrite规则重写的标志一览&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;R[=code](force redirect) 强制外部重定向强制在替代字符串加上&lt;a href=&#34;http://thishost[:thisport]/前缀重定向到外部的URL.如果code不指定，将用缺省的302&#34;&gt;http://thishost[:thisport]/前缀重定向到外部的URL.如果code不指定，将用缺省的302&lt;/a&gt; HTTP状态码。&lt;/li&gt;
&lt;li&gt;F(force URL to be forbidden)禁用URL,返回403HTTP状态码。&lt;/li&gt;
&lt;li&gt;G(force URL to be gone) 强制URL为GONE，返回410HTTP状态码。&lt;/li&gt;
&lt;li&gt;P(force proxy) 强制使用代理转发。&lt;/li&gt;
&lt;li&gt;L(last rule) 表明当前规则是最后一条规则，停止分析以后规则的重写。&lt;/li&gt;
&lt;li&gt;N(next round) 重新从第一条规则开始运行重写过程。&lt;/li&gt;
&lt;li&gt;C(chained with next rule) 与下一条规则关联如果规则匹配则正常处理，该标志无效，如果不匹配，那么下面所有关联的规则都跳过。&lt;/li&gt;
&lt;li&gt;T=MIME-type(force MIME type) 强制MIME类型&lt;/li&gt;
&lt;li&gt;NS (used only if no internal sub-request) 只用于不是内部子请求&lt;/li&gt;
&lt;li&gt;NC(no case) 不区分大小写&lt;/li&gt;
&lt;li&gt;QSA(query string append) 追加请求字符串&lt;/li&gt;
&lt;li&gt;NE(no URI escaping of output) 不在输出转义特殊字符　　例如：RewriteRule /foo/(.*) /bar?arg=P1\%3d$1 [R,NE] 将能正确的将/foo/zoo转换/bar?arg=P1=zed&lt;/li&gt;
&lt;li&gt;PT(pass through to next handler) 传递给下一个处理　　例如：RewriteRule ^/abc(.*) /def$1 [PT] # 将会交给/def规则处理Alias /def /ghi&lt;/li&gt;
&lt;li&gt;S=num(skip next rule(s)) 跳过num条规则&lt;/li&gt;
&lt;li&gt;E=VAR:VAL(set environment variable) 设置环境变量&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;二、实例分析：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;color: #0000ff;&#34;&gt; # BEGIN WordPress&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;RewriteRule &amp;#8220;^/dir/ ([^./]*) .html&amp;#8221; &amp;#8220;/dir/script.cgi?doc=$1&amp;#8243; [PT]&lt;br /&gt;
RewriteEngine On&lt;br /&gt;
RewriteBase /wordpress/&lt;br /&gt;
RewriteCond %{REQUEST_FILENAME} !-f&lt;br /&gt;
RewriteCond %{REQUEST_FILENAME} !-d&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;三、解释：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1）RewriteRule &amp;#8220;^/dir/ ([^./]*) .html&amp;#8221; &amp;#8220;/dir/script.cgi?doc=$1&amp;#8243; [PT]&lt;/p&gt;

&lt;p&gt;PT(pass through to next handler) 传递给下一个处理&lt;br /&gt;
将形如：/dir/abc.html 定向到/dir/script.cgi?doc=abc 并且将重定向的结果传递给下一条规则使用&lt;/p&gt;

&lt;p&gt;2）RewriteEngine On&lt;br /&gt;
开启url rewrite&lt;/p&gt;

&lt;p&gt;3)RewriteBase /wordpress/&lt;br /&gt;
设定重写的目录&lt;/p&gt;

&lt;p&gt;4)&lt;br /&gt;
RewriteCond %{REQUEST_FILENAME} !-f&lt;br /&gt;
RewriteCond %{REQUEST_FILENAME} !-d&lt;/p&gt;

&lt;p&gt;这两句的意思是如果请求的url中有在服务器能找到的文件那么就直接访问文件，有能找到的目录就直接访问目录 ，并停止执行下面的重写规则&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>