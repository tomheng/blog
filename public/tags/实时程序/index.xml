<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>实时程序 on 趣味互联网</title>
    <link>http://:1313/tmp/tags/%E5%AE%9E%E6%97%B6%E7%A8%8B%E5%BA%8F/</link>
    <description>Recent content in 实时程序 on 趣味互联网</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 02 Jan 2010 16:13:49 +0000</lastBuildDate>
    <atom:link href="http://:1313/tmp/tags/%E5%AE%9E%E6%97%B6%E7%A8%8B%E5%BA%8F/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>实时网页程序简单介绍</title>
      <link>http://:1313/tmp/2010/01/%E5%AE%9E%E6%97%B6%E7%BD%91%E9%A1%B5%E7%A8%8B%E5%BA%8F%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Sat, 02 Jan 2010 16:13:49 +0000</pubDate>
      
      <guid>http://:1313/tmp/2010/01/%E5%AE%9E%E6%97%B6%E7%BD%91%E9%A1%B5%E7%A8%8B%E5%BA%8F%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/</guid>
      <description>&lt;p&gt;实时网页程序&lt;/p&gt;

&lt;p&gt;在传统的网页中客户端总是主动的向服务器端索要信息，然后服务器端才把客户端请求的信息发送回来。在这种模式中服务器端是被动的，服务器只能去响应客户端的请求，即只有客户端发起请求，服务器才会作出响应；客户端如果没有任何请求，无论服务器端发生了什么都不会去通知客户端。&lt;/p&gt;

&lt;p&gt;而实时网页程序要实现的则是服务器端的主动推送能力，即服务端可以随时向客户端推送必要的信息，这样就使得服务器端具有了一定的主动性。这种特性对一些应用和程序是必要的，比如twitter这种网络引用，每时每刻都有新的信息产生，如果服务器端不能主动地推送信息给客户端，那么用户就要不断地去刷新网页（为了获取信息用户付出了很多的时间），这无疑增加了用户使用twitter的成本，降低了&lt;a href=&#34;http://www.twitter.com&#34; target=&#34;_blank&#34;&gt;twitter&lt;/a&gt;本身的价值。而如果服务端具有一定的推送能力，那么用户就可以把用在刷新上的时间剩下来，去做其他的更有意义的事情，比如去偷个菜什么的。还有一个重要的应用就是网页游戏，这里的网页游戏指的是那些具有即时交互性的游戏（像传统的桌面网游一样），在这种情境下，服务器端的推送能力就变得尤为重要。此外实时网页程序也是互联网发展的重要方向，如果web能够友好的实现服务器端的推送，那么网页应用打败桌面软件的一天指日可待，&lt;a href=&#34;http://blog.webfuns.net/archives/149.html&#34; target=&#34;_blank&#34;&gt;chrome os&lt;/a&gt;将会大放光芒。&lt;/p&gt;

&lt;p&gt;基于以上几点，我对实时网页程序产生的兴趣。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>